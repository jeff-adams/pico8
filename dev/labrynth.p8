pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--labrynth
--by atomicxistence

function _init()
	cls()
	setup_vars()
	--labrynth setup
	free_tile={sprite=16,x=3,y=1}
	lab=setup_lab()
	--player setup
	players=player_setup()
	cplayer=players[1]
end

function _update()
	update()
end

function _draw()
	cls()
	draw_borders()
	--draw_lab()
	for row in all(lab) do
		foreach(row,draw_tile)
	end
	draw_tile(free_tile)
	foreach(players,draw_tile)
end	

function draw_borders()
	color(5)
	rect(origin,origin,origin+90,origin+90)
end

function draw_lab()
	for _row=1,9 do
		for _col=1,9 do
			local _tile=lab[_row][_col]
			spr(_tile,origin+8*_row,origin+8*_col)
		end
	end
end

function draw_tile(_tile)
	if _tile.x==nil then 
		print("nil",80,80,9)
	else
		local _x,_y=_tile.x*8+origin,_tile.y*8+origin
		spr(_tile.sprite,_x,_y)
	end
end

function tile_placement()
	if btnp(❎) then 
		--rotate tile
		free_tile.sprite=rotate_tile(free_tile.sprite)
		sfx(0)
	end
	if btnp(🅾️) then
		--push tile in
		push_tile()
		update=player_movement
		sfx(2)
	end
	if btnp(⬅️) then 
		free_tile=move_tile(free_tile,left) 
		sfx(1)
	end
	if btnp(➡️) then 
		free_tile=move_tile(free_tile,right)
		sfx(1) 
	end
	if btnp(⬆️) then 
		free_tile=move_tile(free_tile,up) 
		sfx(1)
	end
	if btnp(⬇️) then 
		free_tile=move_tile(free_tile,down) 
		sfx(1)
	end
end

function player_movement()
	if btnp(❎) then
		cplayer=next_player(players,cplayer) 
		update=tile_placement
		sfx(3)
	end
	if btnp(⬅️) then 
		cplayer.x-=1
		sfx(1)
	end
	if btnp(➡️) then 
		cplayer.x+=1
		sfx(1) 
	end
	if btnp(⬆️) then 
		cplayer.y-=1
		sfx(1)
	end
	if btnp(⬇️) then 
		cplayer.y+=1
		sfx(1)
	end
end
-->8
--setup

function setup_vars()
	origin=0
	up={0,-1}
	down={0,1}
	right={1,0}
	left={-1,0}
	invalid_space={x=0,y=0}
	
	update=tile_placement
end

function setup_lab()
	local _lab=initial_lab()
	local _tiles={}
	--add 13 straight tiles (spr 33-36)
	_tiles=add_tiles(33,13,_tiles)
	--add 9 corner tiles (spr 17-20)
	_tiles=add_tiles(17,9,_tiles)
	--add 12 t tiles (spr 49-52)
	_tiles=add_tiles(49,12,_tiles)
	_tiles=shuffle_tiles(_tiles)
	--place the shuffled tiles and
	--get back the extra tile
	_lab,free_tile.sprite=place_tiles(_lab,_tiles)
	return _lab
end

--returns a 2d array of tiles
--tiles are an array of sprite, x, and y
function initial_lab()
	local _lab={}
	local _index=1	
	for _x=0,8 do
		local _row={}
		for _y=0,8 do
			local _i=place_indicator(_x,_y)
			if _i==nil then 
				_i=place_default_tile(_x,_y,_index) 
				if _i==nil then
					_i=16
				else 
					_index+=1
				end	
			end
			local _tile={sprite=_i,x=_x,y=_y}	
			add(_row,_tile)
		end
		add(_lab,_row)
	end
	return _lab
end

function place_indicator(_x,_y)
	--down
	if _y==0 and mid(1,_x,7)%2==0 then return 1 end
	--left
	if _x==8 and mid(1,_y,7)%2==0 then return 2 end
	--up
	if _y==8 and mid(1,_x,7)%2==0 then return 3 end
	--right
	if _x==0 and mid(1,_y,7)%2==0 then return 4 end
	--not an indicator
	return nil
end

function place_default_tile(_x,_y,_index)
	--default tile sequence
	local _tiles={17,49,49,20,50,49,52,52,50,50,51,52,18,51,51,19}
	--inside spaces
	if is_inside_space(_x,_y) then 
		 if _x%2==1 and _y%2==1 then
		 	return _tiles[_index]
		 end
	end
	return nil
end

function add_tiles(_spr,_count,_tiles)
	for i=1,_count do
		add(_tiles,flr(rnd(4)+_spr))
	end
	return _tiles
end

function shuffle_tiles(_tiles)
	for i=#_tiles, 2, -1 do
  local j=max(flr(rnd(i)),1)
  _tiles[i],_tiles[j]=_tiles[j],_tiles[i]
 end
	return _tiles
end

function place_tiles(_lab,_tiles)
	--place tiles on empty spots
	local _tindex=1
	for i=1,#_lab do
		for j=1,#_lab[i] do
			if is_inside_space(i-1,j-1) then
				local _tile=_lab[i][j]
				if _tile.sprite==16 then
					_lab[i][j]={sprite=_tiles[_tindex],x=i,y=j}
					_tindex+=1
				end
			end
		end
	end
	return _lab,_tiles[_tindex]
end

function is_inside_space(_x,_y)
	return _x==mid(1,_x,7) and _y==mid(1,_y,7)
end

function player_setup()
	local _players={}
	local _p1={sprite=5,x=2,y=2}
	add(_players,_p1)
	local _p2={sprite=6,x=8,y=8}
	add(_players,_p2)
	return _players
end
-->8
--logic

function rotate_tile(_sprite)
	if _sprite%4==0 then
		_sprite-=3
	else	
		_sprite+=1
	end
	return _sprite
end

function move_tile(_spr,_dir)
	local _destx,_desty=_dir[1]*2,_dir[2]*2
	--on top/bottom
	_spr.x,_spr.y=tile_limit(_spr.x,_spr.y,_destx)
	--on left/right
	_spr.y,_spr.x=tile_limit(_spr.y,_spr.x,_desty)
	--moves tile past the invalid space
	--★ can get stuck depending on dir
	if same_space(_spr,invalid_space) then
		return move_tile(_spr,_dir)
	end
	return _spr
end

function tile_limit(_a,_b,_dest)
	if _b==1 or _b==9 then
		_a=mid(1,_a+_dest,9)
		if _a==1 or _a==9 then
			_b=_b==1 and 3 or 7
		end
	end
	return _a,_b
end

function next_player(_players,_cplayer)
	--returns next in table, circular
	local _key=nil
	for k,v in pairs(_players) do
  		if v==_cplayer then _key=k end
 	end
	local _,_nplayer=next(_players,_key)
	--_nplayer will be nil if its the last in the table
	return _nplayer and _nplayer or _players[1]
end

function push_tile()
	--get location of free_tile
	local _x,_y,_ttile=free_tile.x,free_tile.y,free_tile
	local _row,_column=lab[_y],{}
		for j=1,7 do
			add(_column,lab[j][_x])
		end
	--find out which way it's pushing
	if _x==1 then
		--push right
		for i=1,#_row-1 do
			_row[i],_ttile=_ttile,_row[i+1]
		end
		invalid_space={x=7,y=_y}
	elseif _x==7 then
		--push left
		for i=#_row,2,-1 do
			_row[i],_ttile=_ttile,_row[i-1]
		end
		invalid_space={x=1,y=_y}
	elseif _y==1 then
		--push down
		
		invalid_space={x=_x,y=7}
	elseif _y==7 then
		--push up
		
		invalid_space={x=_x,y=1}
	end
	--change the labrynth
	lab[_y]=_row
	for j=1,7 do
		lab[_y][j]=_column[j]
	end
	--reassign free_tile
	free_tile={sprite=_ttile,x=invalid_space.x,y=invalid_space.y}
end

function same_space(_a,_b)
	return _a.x==_b.x and _a.y==_b.y
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000a0000000a00000000a00000080000000c0000000b0000000e000000000000000000000000000000000000000000000000000000000000
007007000000000000aa000000aaa0000000aa000088800000ccc00000bbb00000eee00000000000000000000000000000000000000000000000000000000000
00077000000000000aaa00000aaaaa000000aaa000080000000c0000000b0000000e000000000000000000000000000000000000000000000000000000000000
000770000aaaaa0000aa0000000000000000aa000080800000c0c00000b0b00000e0e00000000000000000000000000000000000000000000000000000000000
0070070000aaa000000a0000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555505555555055666550556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555505555555055666550556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000055666660666665506666655055666660000088000000cc000000bb000000ee0000000000000000000000000000000000000000000000000000000000
0000000055666660666665506666655055666660088808000ccc0c000bbb0b000eee0e0000000000000000000000000000000000000000000000000000000000
00000000556666606666655066666550556666600080880000c0cc0000b0bb0000e0ee0000000000000000000000000000000000000000000000000000000000
00000000556665505566655055555550555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000556665505566655055555550555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555505566655055555550556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555505566655055555550556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666605566655066666660556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666605566655066666660556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000666666605566655066666660556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555505566655055555550556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000555555505566655055555550556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000556665505555555055666550556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000556665505555555055666550556665500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000556666606666666066666550666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000556666606666666066666550666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000556666606666666066666550666666600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000556665505566655055666550555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000556665505566655055666550555555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000100010001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000110032003200120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000310031003200330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000310034003300330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0004000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000140034003400130000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000300030003000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000600001762017620206200060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600006000060000600
000600000d1400d140071400714000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100001000010000100
000600001f1501f15019150191501f1501f1501c1501c150151501515015150151501015010150101501015000100001000010000100001000010000100001000010000100001000010000100001000010000100
000400000645004450014500040000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400004000040000400
